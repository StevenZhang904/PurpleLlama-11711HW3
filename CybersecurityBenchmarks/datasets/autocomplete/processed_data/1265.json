{
    "file_path": "serial/examples/probe_pins.rs",
    "vulnerability": null,
    "source code": "\n\n\nconst SETTINGS: serial::PortSettings = serial::PortSettings {\n    baud_rate:    serial::Baud9600,\n    char_size:    serial::Bits8,\n    parity:       serial::ParityNone,\n    stop_bits:    serial::Stop1,\n    flow_control: serial::FlowNone,\n};\n\nfn main() {\nconst SETTINGS: serial::PortSettings = serial::PortSettings {\n    baud_rate:    serial::Baud9600,\n    char_size:    serial::Bits8,\n    parity:       serial::ParityNone,\n    stop_bits:    serial::Stop1,\n    flow_control: serial::FlowNone,\n};\n\nfn main() {\n    for arg in env::args_os().skip(1) {\n        let mut port = serial::open(&arg).unwrap();\n        println!(\"opened device {:?}\", arg);\n        probe_pins(&mut port).unwrap();\n    }\n}\n\nfn probe_pins<T: SerialPort>(port: &mut T) -> serial::Result<()> {\n    try!(port.configure(&SETTINGS));\n    try!(port.set_timeout(Duration::from_millis(100)));",
    "language": "rust",
    "cwe_identifier": "CWE-807",
    "pattern_desc": "The first argument can be controlled by an attacker. Do not use this function in security relevant contexts",
    "line_number": 18,
    "line_text": "    for arg in env::args_os().skip(1) {",
    "pattern_id": "RUST-R-004",
    "rule": "args_os\\(\\)",
    "label": 1
}