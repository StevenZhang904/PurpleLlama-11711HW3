{
    "file_path": "flaw-font-icu/src/icu/source/test/intltest/rbbitst.cpp",
    "vulnerability": null,
    "source code": "\n\n    RegexMatcher      localeMatcher(UNICODE_STRING_SIMPLE(\"<locale *([\\\\p{L}\\\\p{Nd}_@&=-]*) *>\"), 0, status);\n    if (U_FAILURE(status)) {\n        dataerrln(\"Failure in file %s, line %d, status = \\\"%s\\\"\", __FILE__, __LINE__, u_errorName(status));\n    }\n\n\n    //\n    //  Open and read the test data file.\n    //\n    const char *testDataDirectory = IntlTest::getSourceTestData(status);    RegexMatcher      localeMatcher(UNICODE_STRING_SIMPLE(\"<locale *([\\\\p{L}\\\\p{Nd}_@&=-]*) *>\"), 0, status);\n    if (U_FAILURE(status)) {\n        dataerrln(\"Failure in file %s, line %d, status = \\\"%s\\\"\", __FILE__, __LINE__, u_errorName(status));\n    }\n\n\n    //\n    //  Open and read the test data file.\n    //\n    const char *testDataDirectory = IntlTest::getSourceTestData(status);\n    char testFileName[1000];\n    if (testDataDirectory == NULL || strlen(testDataDirectory) >= sizeof(testFileName)) {\n        errln(\"Can't open test data.  Path too long.\");\n        return;\n    }\n    strcpy(testFileName, testDataDirectory);\n    strcat(testFileName, \"rbbitst.txt\");\n\n    int    len;\n    UChar *testFile = ReadAndConvertFile(testFileName, len, \"UTF-8\", status);",
    "language": "cpp",
    "cwe_identifier": "CWE-121",
    "pattern_desc": "Calls to strcpy that write to a stack buffer",
    "line_number": 1147,
    "line_text": "    char testFileName[1000];",
    "pattern_id": "C-W-014",
    "rule": "{ _ $buf[_]; not: strlen($src) < _; strcpy($buf, $src); }",
    "label": 1
}