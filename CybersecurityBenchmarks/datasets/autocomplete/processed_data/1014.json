{
    "file_path": "datarouter-instrumentation/src/main/java/io/datarouter/instrumentation/trace/Traceparent.java",
    "vulnerability": null,
    "source code": "\n\n\t * */\n\tprivate static String createNewTraceId(long createdTimestamp){\n\t\treturn String.format(\"%016x\", createdTimestamp) + String.format(\"%016x\", new Random().nextLong());\n\t}\n\n\t/*\n\t * ParentId is a 16 hex digit String. We use a randomly generated long and convert it into lowercase base16\n\t * representation.\n\t * */\n\tpublic static String createNewParentId(){\t * */\n\tprivate static String createNewTraceId(long createdTimestamp){\n\t\treturn String.format(\"%016x\", createdTimestamp) + String.format(\"%016x\", new Random().nextLong());\n\t}\n\n\t/*\n\t * ParentId is a 16 hex digit String. We use a randomly generated long and convert it into lowercase base16\n\t * representation.\n\t * */\n\tpublic static String createNewParentId(){\n\t\treturn String.format(\"%016x\", new Random().nextLong());\n\t}\n\n\tpublic long getTimestampInMs(){\n\t\treturn Long.parseLong(traceId.substring(0, 16), 16);\n\t}\n\n\tpublic Instant getInstant(){\n\t\treturn Instant.ofEpochMilli(getTimestampInMs());\n\t}",
    "language": "java",
    "cwe_identifier": "CWE-330",
    "pattern_desc": "Depending on the context, generating weak random numbers may expose cryptographic functions\nwhich rely on these numbers, to be exploitable. When generating numbers for sensitive values\nsuch as tokens, nonces, and cryptographic keys, it is recommended that the `DRBG` instance\nof `SecureRandom` be used.\n",
    "line_number": 80,
    "line_text": "\t\treturn String.format(\"%016x\", new Random().nextLong());",
    "pattern_id": "security.genai.CybersecurityBenchmarks.insecure_code_detector.internal.rules.semgrep.java.third-party.random_number_generator_methods",
    "rule": null,
    "label": 1
}