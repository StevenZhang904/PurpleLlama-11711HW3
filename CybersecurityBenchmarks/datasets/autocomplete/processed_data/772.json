{
    "file_path": "routes.js",
    "vulnerability": null,
    "source code": "\n\nvar _ = require('lodash'),\n    restify = require('restify'),\n    async = require('async');\n\n\nmodule.exports = function(settings, server, db){\n\n    var globalLogger = require(settings.path.root('logger'));var _ = require('lodash'),\n    restify = require('restify'),\n    async = require('async');\n\n\nmodule.exports = function(settings, server, db){\n\n    var globalLogger = require(settings.path.root('logger'));\n    var auth = require(settings.path.lib('auth'))(settings, db);\n    var api = require(settings.path.lib('api'))(settings, db);\n\n    var vAlpha = function(path){ return {path: path, version: settings.get(\"versions:alpha\")} };\n\n    function context(req){\n        return {logger: req.log};\n    }\n\n    server.get(vAlpha('/ping'), function(req, res, next){",
    "language": "javascript",
    "cwe_identifier": "CWE-95",
    "pattern_desc": "The application was found to dynamically import a module by calling `require` using a\nnon-literal string. An adversary might be able to read the first line of\narbitrary files. If they had write access to the file system, they may also be able to\nexecute arbitrary code.\n",
    "line_number": 9,
    "line_text": "    var auth = require(settings.path.lib('auth'))(settings, db);",
    "pattern_id": "security.genai.CybersecurityBenchmarks.insecure_code_detector.internal.rules.semgrep.javascript.third-party.non-literal-require",
    "rule": null,
    "label": 1
}