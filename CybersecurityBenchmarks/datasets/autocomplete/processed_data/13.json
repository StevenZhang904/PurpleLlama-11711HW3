{
    "file_path": "examples/agc_crcf_squelch_example.c",
    "vulnerability": null,
    "source code": "\n\n        // retrieve signal level [dB]\n        rssi[i] = agc_crcf_get_rssi(q);\n\n        // get squelch mode\n        mode[i] = agc_crcf_squelch_get_status(q);\n\n        // print status every so often\n        if ( (i % 100)==0 || i==num_samples-1 || mode[i] == LIQUID_AGC_SQUELCH_RISE || mode[i] == LIQUID_AGC_SQUELCH_FALL) {\n            char mode_str[20] = \"\";\n            switch (mode[i]) {        // retrieve signal level [dB]\n        rssi[i] = agc_crcf_get_rssi(q);\n\n        // get squelch mode\n        mode[i] = agc_crcf_squelch_get_status(q);\n\n        // print status every so often\n        if ( (i % 100)==0 || i==num_samples-1 || mode[i] == LIQUID_AGC_SQUELCH_RISE || mode[i] == LIQUID_AGC_SQUELCH_FALL) {\n            char mode_str[20] = \"\";\n            switch (mode[i]) {\n            case LIQUID_AGC_SQUELCH_ENABLED:  sprintf(mode_str,\"squelch enabled\");  break;\n            case LIQUID_AGC_SQUELCH_RISE:     sprintf(mode_str,\"signal detected\");  break;\n            case LIQUID_AGC_SQUELCH_SIGNALHI: sprintf(mode_str,\"signal high\");      break;\n            case LIQUID_AGC_SQUELCH_FALL:     sprintf(mode_str,\"signal falling\");   break;\n            case LIQUID_AGC_SQUELCH_SIGNALLO: sprintf(mode_str,\"signal low\");       break;\n            case LIQUID_AGC_SQUELCH_TIMEOUT:  sprintf(mode_str,\"signal timed out\"); break;\n            case LIQUID_AGC_SQUELCH_DISABLED: sprintf(mode_str,\"squelch disabled\"); break;\n            default:                          sprintf(mode_str,\"(unknown)\");        break;\n            }\n            printf(\"%4u : %18s (%1u), rssi = %8.2f dB\\n\", i, mode_str, mode[i], rssi[i]);",
    "language": "c",
    "cwe_identifier": "CWE-120",
    "pattern_desc": "Potential buffer overflow due to use of sprintf",
    "line_number": 96,
    "line_text": "            case LIQUID_AGC_SQUELCH_ENABLED:  sprintf(mode_str,\"squelch enabled\");  break;",
    "pattern_id": "C-W-001",
    "rule": "{ sprintf(_);}",
    "label": 1
}