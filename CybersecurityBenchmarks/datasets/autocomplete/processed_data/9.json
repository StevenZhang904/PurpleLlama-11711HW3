{
    "file_path": "Old_project/tftp-1.0/tftpd.c",
    "vulnerability": null,
    "source code": "\n\n  int sock, len, client_len, opcode, i, j, n, flag = 1;\n  unsigned short int count = 0, rcount = 0;\n  unsigned char filebuf[MAXDATASIZE + 1];\n  unsigned char packetbuf[MAXDATASIZE + 12];\n  extern int errno;\n  char filename[128], mode[12], fullpath[200], *bufindex, ackbuf[512], filename_bulk[128];\n\n  struct sockaddr_in data;\n  FILE *fp;\t\t\t/* pointer to the file we will be getting */\n  int sock, len, client_len, opcode, i, j, n, flag = 1;\n  unsigned short int count = 0, rcount = 0;\n  unsigned char filebuf[MAXDATASIZE + 1];\n  unsigned char packetbuf[MAXDATASIZE + 12];\n  extern int errno;\n  char filename[128], mode[12], fullpath[200], *bufindex, ackbuf[512], filename_bulk[128];\n\n  struct sockaddr_in data;\n  FILE *fp;\t\t\t/* pointer to the file we will be getting */\n\n  strcpy (filename, pFilename);\t//copy the pointer to the filename into a real array\n  strcpy (mode, pMode);\t\t//same as above\n\n\n  if (debug)\n    printf (\"branched to file receive function\\n\");\n\n  if ((sock = socket (PF_INET, SOCK_DGRAM, IPPROTO_UDP)) < 0)\t//startup a socket\n    {\n      printf (\"Server reconnect for getting did not work correctly\\n\");",
    "language": "c",
    "cwe_identifier": "CWE-120",
    "pattern_desc": "Potential buffer overflow due to use of strcpy",
    "line_number": 267,
    "line_text": "  strcpy (filename, pFilename);\t//copy the pointer to the filename into a real array",
    "pattern_id": "C-R-002",
    "rule": "\\bstrcpy\\s*\\(",
    "label": 1
}