{
    "file_path": "platform/mds/mds-web/src/main/resources/webapp/js/directives.js",
    "vulnerability": null,
    "source code": "\n\n        };\n    });\n\n    directives.directive('patternValidity', function() {\n        var PATTERN_REGEXP;\n        return {\n            require: 'ngModel',\n            link: function(scope, element, attrs, ctrl) {\n                ctrl.$parsers.unshift(function(viewValue) {\n                    if (attrs.patternValidity !== undefined && scope.field.validation.criteria[attrs.patternValidity].enabled) {        };\n    });\n\n    directives.directive('patternValidity', function() {\n        var PATTERN_REGEXP;\n        return {\n            require: 'ngModel',\n            link: function(scope, element, attrs, ctrl) {\n                ctrl.$parsers.unshift(function(viewValue) {\n                    if (attrs.patternValidity !== undefined && scope.field.validation.criteria[attrs.patternValidity].enabled) {\n                        PATTERN_REGEXP = new RegExp(scope.field.validation.criteria[attrs.patternValidity].value);\n                    } else {\n                        PATTERN_REGEXP = new RegExp('');\n                    }\n                    if (ctrl.$viewValue === '' || PATTERN_REGEXP.test(ctrl.$viewValue)) {\n                        // it is valid\n                        ctrl.$setValidity('pattern', true);\n                        return viewValue;\n                    } else {\n                        // it is invalid, return undefined (no model update)",
    "language": "javascript",
    "cwe_identifier": "CWE-185",
    "pattern_desc": "The `RegExp` constructor was called with a non-literal value. If an adversary were able to\nsupply a malicious regex, they could cause a Regular Expression Denial of Service (ReDoS)\nagainst the application. In Node applications, this could cause the entire application to no\nlonger\nbe responsive to other users' requests.\n",
    "line_number": 3308,
    "line_text": "                        PATTERN_REGEXP = new RegExp(scope.field.validation.criteria[attrs.patternValidity].value);",
    "pattern_id": "security.genai.CybersecurityBenchmarks.insecure_code_detector.internal.rules.semgrep.javascript.third-party.dos-non-literal-regexp",
    "rule": null,
    "label": 1
}